import React, { Component } from 'react';
export declare type ScrubberProps = {
    className?: string;
    value: number;
    min: number;
    max: number;
    bufferPosition?: number;
    vertical?: boolean;
    onScrubStart?: (value: number) => void;
    onScrubEnd?: (value: number) => void;
    onScrubChange?: (value: number) => void;
    markers?: number[];
    [key: string]: any;
};
declare type Nullable<T> = T | null;
declare type ScrubberState = {
    seeking: boolean;
    mouseX: Nullable<number>;
    mouseY: Nullable<number>;
    touchId: Nullable<number>;
    touchX: Nullable<number>;
    touchY: Nullable<number>;
    hover: boolean;
};
export declare class Scrubber extends Component<ScrubberProps> {
    barRef: React.RefObject<HTMLDivElement>;
    state: ScrubberState;
    componentDidMount(): void;
    componentWillUnmount(): void;
    getPositionFromMouseX: () => number;
    getPositionFromMouseY: () => number;
    getPositionFromCursor: () => number;
    handleMouseMove: (e: MouseEvent) => void;
    handleTouchMove: (e: TouchEvent) => void;
    handleSeekStart: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;
    handleTouchStart: (e: React.TouchEvent<HTMLDivElement>) => void;
    handleSeekEnd: () => void;
    handleTouchEnd: (e: TouchEvent) => void;
    renderMarkers: () => JSX.Element[] | null;
    getValuePercent: (value: number) => string;
    render(): JSX.Element;
}
export {};
